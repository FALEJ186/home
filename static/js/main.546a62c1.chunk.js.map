{"version":3,"sources":["timeline/Timeline.js","navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Timeline","id","style","width","height","background","items","title","cardTitle","cardSubtitle","cardDetailedText","media","type","source","url","mode","Navbar","marginTop","overflow","className","marginLeft","exact","to","marginRight","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAuCeA,MArCf,WA4BE,OACE,qBAAKC,GAAG,WAAR,SACE,qBAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,WAAY,eAAzD,SACE,cAAC,IAAD,CAAQC,MA9BA,CACZ,CACEC,MAAO,eACPC,UAAW,aACXC,aAAc,sBACdC,iBAAkB,kDAClBC,MAAO,CACLC,KAAM,QACNC,OAAQ,CACNC,IAAK,8BAIX,CACEP,MAAO,WACPC,UAAW,UACXC,aACE,6DACFE,MAAO,CACLC,KAAM,QACNC,OAAQ,CACNC,IAAK,+BASeC,KAAK,oBCkCpBC,MAtDf,WACE,OACE,sBACEf,GAAG,QACHC,MAAO,CACLe,UAAU,KACVb,OAAQ,OACRC,WACE,+DACFa,SAAU,UAPd,SAUE,eAAC,IAAD,WACE,sBAAKC,UAAU,sBAAsBlB,GAAG,MAAxC,UACE,sBACEkB,UAAU,uCACVjB,MAAO,CAAEkB,WAAY,MAFvB,iCAMA,cAAC,IAAD,CACED,UAAU,uCACVE,OAAK,EACLC,GAAG,IACHpB,MAAO,CAAEkB,WAAY,OAJvB,kBAQA,cAAC,IAAD,CACED,UAAU,uCACVG,GAAG,UACHpB,MAAO,CAAEkB,WAAY,QAHvB,oBAOA,cAAC,IAAD,CACED,UAAU,uCACVG,GAAG,YACHpB,MAAO,CAAEkB,WAAY,OAAQG,YAAa,OAH5C,yBASF,cAAC,IAAD,UACE,cAAC,IAAD,CAAOF,OAAK,EAACG,KAAK,IAAlB,SACE,cAAC,EAAD,cCxCGC,MATf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,cAAC,EAAD,OCDSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.546a62c1.chunk.js","sourcesContent":["import { Chrono } from \"react-chrono\";\r\n\r\nfunction Timeline() {\r\n  const items = [\r\n    {\r\n      title: \"October 1998\",\r\n      cardTitle: \"I was born\",\r\n      cardSubtitle: \"Manila, Philippines\",\r\n      cardDetailedText: \"The Phillipines was rough but I made it through\",\r\n      media: {\r\n        type: \"IMAGE\",\r\n        source: {\r\n          url: \"http://someurl/image.jpg\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"May 1960\",\r\n      cardTitle: \"Dunkirk\",\r\n      cardSubtitle:\r\n        \"Men of the British Expeditionary Force (BEF) wade out to..\",\r\n      media: {\r\n        type: \"IMAGE\",\r\n        source: {\r\n          url: \"http://someurl/image.jpg\",\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div id=\"timeline\">\r\n      <div style={{ width: \"100%\", height: \"100%\", background: \"transparent\" }}>\r\n        <Chrono items={items} mode=\"HORIZONTAL\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timeline;\r\n","import Dropwdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport DropdownItem from \"react-bootstrap/DropdownItem\";\r\nimport \"./Navbar.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport Timeline from \"../timeline/Timeline.js\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <main\r\n      id=\"check\"\r\n      style={{\r\n        marginTop:\"1%\",\r\n        height: \"100%\",\r\n        background:\r\n          \"radial-gradient(ellipse at bottom, #295f9c 0%, #090a0f 100%)\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      <Router>\r\n        <nav className=\"navbar navbar-light\" id=\"top\">\r\n          <span\r\n            className=\"badge rounded-pill even-larger-badge\"\r\n            style={{ marginLeft: \"8%\" }}\r\n          >\r\n            Frederick Alejandro\r\n          </span>\r\n          <NavLink\r\n            className=\"badge rounded-pill even-larger-badge\"\r\n            exact\r\n            to=\"/\"\r\n            style={{ marginLeft: \"15%\" }}\r\n          >\r\n            Home\r\n          </NavLink>\r\n          <NavLink\r\n            className=\"badge rounded-pill even-larger-badge\"\r\n            to=\"/resume\"\r\n            style={{ marginLeft: \"-12%\" }}\r\n          >\r\n            Resume\r\n          </NavLink>\r\n          <NavLink\r\n            className=\"badge rounded-pill even-larger-badge\"\r\n            to=\"/projects\"\r\n            style={{ marginLeft: \"-12%\", marginRight: \"15%\" }}\r\n          >\r\n            Projects\r\n          </NavLink>\r\n        </nav>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Timeline />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import \"./Background.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport Navbar from \"./navbar/Navbar.js\";\r\nimport Timeline from \"./timeline/Timeline.js\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}